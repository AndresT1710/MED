@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject NavigationManager Navigation

<style>
    .dropdown-item:hover {
        background-color: #dc3545 !important; /* rojo Bootstrap */
        color: white !important;
    }
</style>

<div class="d-flex vh-100">
    <nav class="sidebar bg-dark text-white p-3" style="width: 250px;">
        <NavMenu />
    </nav>

    <div class="flex-grow-1 d-flex flex-column">
        <header class="d-flex justify-content-end align-items-center px-4 py-2 border-bottom bg-light">
            @if (!string.IsNullOrWhiteSpace(userName))
            {
                <div class="dropdown">
                    <button class="btn btn-outline-primary dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Hola, @userName
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                        <li>
                            <button class="dropdown-item" @onclick="Logout">Cerrar sesión</button>
                        </li>
                    </ul>
                </div>
            }
        </header>

        <main class="flex-grow-1 overflow-auto p-4">
            @Body
        </main>
    </div>
</div>

@code {
    private string? userName;

    protected override async Task OnInitializedAsync()
    {
        userName = await JS.InvokeAsync<string>("localStorage.getItem", "userName");

        var token = await JS.InvokeAsync<string>("localStorage.getItem", "authToken");
        if (string.IsNullOrWhiteSpace(token))
        {
            Navigation.NavigateTo("/login", true);
        }
    }

    private async Task Logout()
    {
        await JS.InvokeVoidAsync("localStorage.removeItem", "authToken");
        await JS.InvokeVoidAsync("localStorage.removeItem", "userName");
        Navigation.NavigateTo("/login", true);
    }
}
