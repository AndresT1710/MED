@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject SMED.FrontEnd.Services.IAuthorizationService AuthService
@using SMED.Shared.DTOs

<div class="layout-container">
    <nav class="sidebar text-white">
        <NavMenu />
    </nav>

    <div class="main-content">
        <header class="main-header d-flex justify-content-end align-items-center">
            @if (currentUser != null && !string.IsNullOrWhiteSpace(currentUser.Name))
            {
                <div class="dropdown">
                    <button class="btn btn-outline-primary dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Hola, @currentUser.Name
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                        <li>
                            <button class="dropdown-item" @onclick="Logout">Cerrar sesión</button>
                        </li>
                    </ul>
                </div>
            }
        </header>

        <main class="content-area">
            @Body
        </main>
    </div>
</div>

@code {
    private UserSessionInfo? currentUser;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await AuthService.GetCurrentUserAsync();
        StateHasChanged();

        if (currentUser == null)
        {
            Navigation.NavigateTo("/login", true);
        }
    }

    // AQUÍ ESTÁ EL CAMBIO: Excluir modales de la página de personas
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("eval", @"
                (function(){
                    function ensureModalsOnBody(){
                        // SOLO mover modales que NO sean de la página de personas
                        document.querySelectorAll('.modal:not(.person-modal)').forEach(function(m){
                            try {
                                if (m.parentElement !== document.body){
                                    document.body.appendChild(m);
                                }
                                m.style.position = 'fixed';
                                m.style.top = '0';
                                m.style.left = '0';
                                m.style.width = '100vw';
                                m.style.height = '100vh';
                                m.style.zIndex = '2147483647';
                                m.style.margin = '0';
                                m.style.display = 'flex';
                                m.style.alignItems = 'center';
                                m.style.justifyContent = 'center';
                            } catch(e){ console && console.warn(e); }
                        });

                        // SOLO forzar backdrop que NO sean de personas
                        document.querySelectorAll('.modal-backdrop:not(.person-backdrop)').forEach(function(b){
                            try {
                                b.style.position = 'fixed';
                                b.style.top = '0';
                                b.style.left = '0';
                                b.style.width = '100vw';
                                b.style.height = '100vh';
                                b.style.zIndex = '2147483646';
                                if(!b.style.backgroundColor) b.style.backgroundColor = 'rgba(0,0,0,0.5)';
                            } catch(e){ console && console.warn(e); }
                        });
                    }

                    ensureModalsOnBody();
                    var mo = new MutationObserver(function(muts){
                        ensureModalsOnBody();
                    });
                    mo.observe(document.body, { childList: true, subtree: true });
                })();
            ");
        }
    }

    private async Task Logout()
    {
        await AuthService.ClearSessionAsync();
        Navigation.NavigateTo("/login", true);
    }
}