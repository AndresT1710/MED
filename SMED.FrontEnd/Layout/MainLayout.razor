@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject SMED.FrontEnd.Services.IAuthorizationService AuthService
@using SMED.Shared.DTOs

<style>
    .dropdown-item:hover {
        background-color: #dc3545 !important;
        color: white !important;
    }

    /* Estilos para evitar el desplazamiento horizontal */
    html, body {
        overflow-x: hidden;
        margin: 0;
        padding: 0;
        height: 100%;
    }
</style>

<div class="layout-container">
    <nav class="sidebar bg-dark text-white">
        <NavMenu />
    </nav>
    <div class="main-content">
        <header class="main-header">
            @if (currentUser != null && !string.IsNullOrWhiteSpace(currentUser.Name))
            {
                <div class="dropdown">
                    <button class="btn btn-outline-primary dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Hola, @currentUser.Name
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                        <li>
                            <button class="dropdown-item" @onclick="Logout">Cerrar sesión</button>
                        </li>
                    </ul>
                </div>
            }
        </header>
        <main class="content-area">
            @Body
        </main>
    </div>
</div>

@code {
    private UserSessionInfo? currentUser;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await AuthService.GetCurrentUserAsync();
        StateHasChanged();

        if (currentUser == null)
        {
            Navigation.NavigateTo("/login", true);
        }
    }

    private async Task Logout()
    {
        await AuthService.ClearSessionAsync();
        Navigation.NavigateTo("/login", true);
    }
}